package io.github.niestrat99.advancedteleport.managers;

import io.github.niestrat99.advancedteleport.CoreClass;
import io.github.niestrat99.advancedteleport.config.MainConfig;
import org.bukkit.Bukkit;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.HandlerList;
import org.bukkit.event.Listener;
import org.bukkit.event.entity.EntityDamageEvent;
import org.jetbrains.annotations.NotNull;

public class InvulnerabilityManager {

    public static void createInvulnerability(Player player, int duration) {
        DamageListener damage = new DamageListener(player);

        Bukkit.getScheduler().runTaskLater(CoreClass.getInstance(), task -> {
            damage.destroy();
        }, duration * 20L);
    }

    private static class DamageListener implements Listener {

        private final @NotNull Player player;

        public DamageListener(@NotNull Player player) {
            this.player = player;
            Bukkit.getPluginManager().registerEvents(this, CoreClass.getInstance());
        }

        @EventHandler
        public void onDamage(EntityDamageEvent event) {

            // If it's not this player, stop there
            if (event.getEntity() != this.player) return;

            // Check cause of damage in the damage list
            if (MainConfig.get().DAMAGE_BLACKLIST.get().contains(event.getCause().name())) return;

            event.setCancelled(true);
        }

        protected void destroy() {
            HandlerList.unregisterAll(this);
        }
    }
}
